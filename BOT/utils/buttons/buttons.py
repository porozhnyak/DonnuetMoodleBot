from aiogram import types

def create_profile_button():
    button = types.KeyboardButton(text="–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(button)
    return keyboard

async def consent():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(types.KeyboardButton(text="–î–∞")),
    keyboard.add(types.KeyboardButton(text="–ù–µ—Ç"))
    return keyboard

def stop():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(types.KeyboardButton(text="–°–¢–û–ü"))
    return keyboard

def start():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(types.KeyboardButton(text="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"))
    keyboard.add(types.KeyboardButton(text="–ú–µ–Ω—é"))
    return keyboard

def authorization(name):
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(types.KeyboardButton(text=f"{name}"))
    keyboard.add(types.KeyboardButton(text="–î—Ä—É–≥–æ–π –ø—Ä–æ—Ñ–∏–ª—å"))
    return keyboard

def Mainmenu():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.row(
        types.KeyboardButton(text="–û—Ü–µ–Ω–∫–∏ üìñ"),
        types.KeyboardButton(text="–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å üñä")
    )
    keyboard.row(
        types.KeyboardButton(text="–ö—É—Ä—Å—ã üìÖ"),
        types.KeyboardButton(text="–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å üí∏")
    )
    keyboard.add(types.KeyboardButton(text="–ü–æ–º–æ—â—å üÜò"))
    return keyboard

def donation_button():
    # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ —Å URL
    button = types.InlineKeyboardButton(text="–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å", url="https://www.tinkoff.ru/rm/rogovoy.dmitriy20/O3lyY1103")
    keyboard = types.InlineKeyboardMarkup().add(button)
    return keyboard

def leadermenu():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True, row_width=2)
    keyboard.row(
        types.KeyboardButton(text="–û—Ü–µ–Ω–∫–∏ üìñ"),
        types.KeyboardButton(text="–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å üñä")
    )
    keyboard.row(
        types.KeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ üìÖ"),
        types.KeyboardButton(text="–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å üí∏")
    )
    # keyboard.add(types.KeyboardButton(text="FAQ"))
    return keyboard

def adminmenu():
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
    keyboard.row(
        types.KeyboardButton(text="–û—Ü–µ–Ω–∫–∏ üìñ"),
        types.KeyboardButton(text="–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å üñä")
    )
    keyboard.row(
        types.KeyboardButton(text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ üìÖ"),
        types.KeyboardButton(text="–ù–∞–∑–Ω–∞—á–∏—Ç—å —Å—Ç–∞—Ä–æ—Å—Ç—É üë§")
    )
    keyboard.add(types.KeyboardButton(text="–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å üí∏"))
    # keyboard.add(types.KeyboardButton(text="FAQ"))
    return keyboard

import json

def lessons_inline_buttons(file_path):
    with open(file_path, 'r', encoding='utf-8') as file:
        lessons = json.load(file)

    button_list = []
    for title, link in lessons.items():
        button = types.InlineKeyboardButton(title, url=link)
        button_list.append(button)

    inline_kb = types.InlineKeyboardMarkup(row_width=2)  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º row_width
    inline_kb.add(*button_list)  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å—Ä–∞–∑—É

    return inline_kb

def all_groups(groups):
    keyboard = types.InlineKeyboardMarkup(row_width=4)
    for group in groups:
        button_text = f"{group}"
        button = types.InlineKeyboardButton(button_text, callback_data="ignore")
        keyboard.insert(button)
    return keyboard










